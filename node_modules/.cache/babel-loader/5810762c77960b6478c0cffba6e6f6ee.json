{"ast":null,"code":"var _jsxFileName = \"/Users/zzzzeng/Desktop/another frontend/face-recognition/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Clarifai from \"clarifai\";\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Rank from \"./components/Rank/Rank\";\nimport Particles from \"react-particles-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: \"b245f7327c72491f83ffec3cdbfffb85\"\n});\nconst particlesOptions = {\n  particles: {\n    number: 30,\n    density: {\n      enable: true,\n      value_area: 800\n    }\n  }\n}; // function App() {\n//   return (\n//     <div className=\"App\">\n//       <Particles className=\"particles\" params={particlesOptions} />\n//       <Navigation />\n//       <Logo />\n//       <Rank />\n//       <ImageLinkForm />\n//       {/* <FaceRecognition /> */}\n//     </div>\n//   );\n// }\n// 就我理解，需要使用到state这个属性必须要有constructor方法，即要通过class来声明\n\nclass App extends Component {\n  constructor() {\n    // 要使用this必须要先使用super\n    super(); // 设定state，可以让子组件和父组件进行数据互动，有点类似于闭包\n\n    this.onInputChange = event => {\n      console.log(event.target.value); //调用 事件对象.target.value可以获得输入input的值\n      // 调用这个继承自Component的方法来进行设定属性，不要通过 this.state.urlInput来设置值\n      // 传入参数为一个对象\n\n      this.setState({\n        urlInput: event.target.value\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\"bounding_box\"];\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        // 因为想在inset里面使用百分比，所以在这里先乘以100，再进行返回\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceFrame = faceFrame => {\n      this.setState({\n        faceFrame: faceFrame\n      }); // 可以简单写法\n      // this.setState({ faceFrame })\n    };\n\n    this.getConcepts = data => {\n      const concepts = data[\"outputs\"][0][\"data\"][\"regions\"][0][\"data\"][\"concepts\"][0];\n      this.setState({\n        concepts: concepts\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      console.log(\"click\"); // 当点击按钮的时候和clarifai的api做交流\n      // 当点击按钮时改变State中imageUrl的值,这个值为输入的url的值\n\n      this.setState({\n        imageUrl: this.state.urlInput\n      });\n      app.models.initModel({\n        id: Clarifai.FACE_DETECT_MODEL // version: \"53e1df302c079b3db8a0a36033ed2d15\",\n\n      }).then(generalModel => {\n        return generalModel.predict(this.state.urlInput);\n      }).then(response => {\n        // 把这一串拿走当作一个方法会比较符合面向对象的语言（我猜）\n        // var concepts =\n        //   response[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\n        //     \"bounding_box\"\n        //   ];\n        console.log(response);\n        this.getConcepts(response);\n        console.log(response[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\"bounding_box\"]);\n        console.log(this.calculateFaceLocation(response));\n        console.log(this.state);\n        return this.calculateFaceLocation(response);\n      }).then(faceLocation => {\n        this.displayFaceFrame(faceLocation);\n      }).catch(err => {\n        console.log(\"There are some errors\", err);\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"logout\") {\n        this.setState({\n          isSignin: false\n        });\n      } else if (route === \"home\") {\n        this.setState({\n          isSignin: true\n        });\n      }\n\n      this.setState({\n        route\n      });\n    };\n\n    this.state = {\n      urlInput: \"\",\n      imageUrl: \"\",\n      faceFrame: {},\n      concepts: {},\n      route: \"signin\",\n      isSignin: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000\").then(response => response.json()).then(data => console.log(data));\n  } // 利用箭头函数解决this的指向问题\n  // 设置这个方法是为了改变state里面属性的值，子组件不能直接修改state的值，只能调用父组件的方法，从而达到修改state的目的\n  // 这里获得的event为调用这个方法的事件\n\n\n  render() {\n    // 通过destructuring减少this.state的使用\n    const {\n      route,\n      imageUrl,\n      concepts,\n      isSignin,\n      faceFrame\n    } = this.state; // 设定一个函数对state.route进行判断\n\n    const knowRoute = route => {\n      if (route === \"home\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n            onInputChange: this.onInputChange,\n            onButtonSubmit: this.onButtonSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n            imageUrl: imageUrl,\n            faceFrame: faceFrame,\n            concepts: concepts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this);\n      } else if (route === \"register\") {\n        return /*#__PURE__*/_jsxDEV(Register, {\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Login, {\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 16\n        }, this);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignin: isSignin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), knowRoute(route)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zzzzeng/Desktop/another frontend/face-recognition/src/App.js"],"names":["React","Component","Clarifai","Login","Register","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","Particles","app","App","apiKey","particlesOptions","particles","number","density","enable","value_area","constructor","onInputChange","event","console","log","target","value","setState","urlInput","calculateFaceLocation","data","clarifaiFace","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceFrame","faceFrame","getConcepts","concepts","onButtonSubmit","imageUrl","state","models","initModel","id","FACE_DETECT_MODEL","then","generalModel","predict","response","faceLocation","catch","err","onRouteChange","route","isSignin","componentDidMount","fetch","json","render","knowRoute"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Clarifai from \"clarifai\";\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Rank from \"./components/Rank/Rank\";\nimport Particles from \"react-particles-js\";\n\nconst app = new Clarifai.App({ apiKey: \"b245f7327c72491f83ffec3cdbfffb85\" });\nconst particlesOptions = {\n  particles: {\n    number: 30,\n    density: {\n      enable: true,\n      value_area: 800,\n    },\n  },\n};\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Particles className=\"particles\" params={particlesOptions} />\n//       <Navigation />\n//       <Logo />\n//       <Rank />\n//       <ImageLinkForm />\n//       {/* <FaceRecognition /> */}\n//     </div>\n//   );\n// }\n\n// 就我理解，需要使用到state这个属性必须要有constructor方法，即要通过class来声明\nclass App extends Component {\n  constructor() {\n    // 要使用this必须要先使用super\n    super();\n    // 设定state，可以让子组件和父组件进行数据互动，有点类似于闭包\n    this.state = {\n      urlInput: \"\",\n      imageUrl: \"\",\n      faceFrame: {},\n      concepts: {},\n      route: \"signin\",\n      isSignin: false,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000\")\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n  }\n\n  // 利用箭头函数解决this的指向问题\n  // 设置这个方法是为了改变state里面属性的值，子组件不能直接修改state的值，只能调用父组件的方法，从而达到修改state的目的\n  // 这里获得的event为调用这个方法的事件\n  onInputChange = (event) => {\n    console.log(event.target.value); //调用 事件对象.target.value可以获得输入input的值\n    // 调用这个继承自Component的方法来进行设定属性，不要通过 this.state.urlInput来设置值\n    // 传入参数为一个对象\n    this.setState({ urlInput: event.target.value });\n  };\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\"bounding_box\"];\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      // 因为想在inset里面使用百分比，所以在这里先乘以100，再进行返回\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceFrame = (faceFrame) => {\n    this.setState({ faceFrame: faceFrame });\n    // 可以简单写法\n    // this.setState({ faceFrame })\n  };\n\n  getConcepts = (data) => {\n    const concepts =\n      data[\"outputs\"][0][\"data\"][\"regions\"][0][\"data\"][\"concepts\"][0];\n    this.setState({ concepts: concepts });\n  };\n\n  onButtonSubmit = () => {\n    console.log(\"click\");\n    // 当点击按钮的时候和clarifai的api做交流\n    // 当点击按钮时改变State中imageUrl的值,这个值为输入的url的值\n    this.setState({ imageUrl: this.state.urlInput });\n    app.models\n      .initModel({\n        id: Clarifai.FACE_DETECT_MODEL,\n        // version: \"53e1df302c079b3db8a0a36033ed2d15\",\n      })\n      .then((generalModel) => {\n        return generalModel.predict(this.state.urlInput);\n      })\n      .then((response) => {\n        // 把这一串拿走当作一个方法会比较符合面向对象的语言（我猜）\n        // var concepts =\n        //   response[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\n        //     \"bounding_box\"\n        //   ];\n        console.log(response);\n        this.getConcepts(response);\n        console.log(\n          response[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\n            \"bounding_box\"\n          ]\n        );\n        console.log(this.calculateFaceLocation(response));\n        console.log(this.state);\n        return this.calculateFaceLocation(response);\n      })\n      .then((faceLocation) => {\n        this.displayFaceFrame(faceLocation);\n      })\n      .catch((err) => {\n        console.log(\"There are some errors\", err);\n      });\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"logout\") {\n      this.setState({ isSignin: false });\n    } else if (route === \"home\") {\n      this.setState({ isSignin: true });\n    }\n    this.setState({ route });\n  };\n\n  render() {\n    // 通过destructuring减少this.state的使用\n    const { route, imageUrl, concepts, isSignin, faceFrame } = this.state;\n    // 设定一个函数对state.route进行判断\n    const knowRoute = (route) => {\n      if (route === \"home\") {\n        return (\n          <div>\n            <Rank />\n            {/* 传入属性值，这样子组件可以获取数据，而且可以调用这里的方法 */}\n            {/* 第一个onInputChange为属性名，第二个为属性值，记得要加this，代表的是这个App类的方法 */}\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition\n              imageUrl={imageUrl}\n              faceFrame={faceFrame}\n              concepts={concepts}\n            />\n          </div>\n        );\n      } else if (route === \"register\") {\n        return <Register onRouteChange={this.onRouteChange} />;\n      } else {\n        return <Login onRouteChange={this.onRouteChange} />;\n      }\n    };\n\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation onRouteChange={this.onRouteChange} isSignin={isSignin} />\n        <Logo />\n        {knowRoute(route)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}