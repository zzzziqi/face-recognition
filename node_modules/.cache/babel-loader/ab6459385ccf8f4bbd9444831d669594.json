{"ast":null,"code":"var _jsxFileName = \"/Users/zzzzeng/Desktop/another frontend/face-recognition/face-recog/face-recognition/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\"; // import Clarifai from \"clarifai\";\n// 在后端使用别人的api会更加安全，因为这样不暴露key\n\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Rank from \"./components/Rank/Rank\";\nimport Particles from \"react-particles-js\"; // const app = new Clarifai.App({ apiKey: \"b245f7327c72491f83ffec3cdbfffb85\" });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  particles: {\n    number: 30,\n    density: {\n      enable: true,\n      value_area: 800\n    }\n  }\n}; // function App() {\n//   return (\n//     <div className=\"App\">\n//       <Particles className=\"particles\" params={particlesOptions} />\n//       <Navigation />\n//       <Logo />\n//       <Rank />\n//       <ImageLinkForm />\n//       {/* <FaceRecognition /> */}\n//     </div>\n//   );\n// }\n// 就我理解，需要使用到state这个属性必须要有constructor方法，即要通过class来声明\n\nconst initialState = {\n  urlInput: \"\",\n  imageUrl: \"\",\n  faceFrame: {},\n  concepts: {},\n  route: \"signin\",\n  isSignin: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    // 要使用this必须要先使用super\n    super(); // 设定state，可以让子组件和父组件进行数据互动，有点类似于闭包\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.eamil,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onInputChange = event => {\n      console.log(event.target.value); //调用 事件对象.target.value可以获得输入input的值\n      // 调用这个继承自Component的方法来进行设定属性，不要通过 this.state.urlInput来设置值\n      // 传入参数为一个对象\n\n      this.setState({\n        urlInput: event.target.value\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\"bounding_box\"];\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        // 因为想在inset里面使用百分比，所以在这里先乘以100，再进行返回\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceFrame = faceFrame => {\n      this.setState({\n        faceFrame: faceFrame\n      }); // 可以简单写法\n      // this.setState({ faceFrame })\n    };\n\n    this.getConcepts = data => {\n      const concepts = data[\"outputs\"][0][\"data\"][\"regions\"][0][\"data\"][\"concepts\"][0];\n      this.setState({\n        concepts: concepts\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      console.log(\"click\"); // 当点击按钮的时候和clarifai的api做交流\n      // 当点击按钮时改变State中imageUrl的值,这个值为输入的url的值\n\n      this.setState({\n        imageUrl: this.state.urlInput\n      }); // app.models\n      //   .initModel({\n      //     id: Clarifai.FACE_DETECT_MODEL,\n      //     // version: \"53e1df302c079b3db8a0a36033ed2d15\",\n      //   })\n      //   .then((generalModel) => {\n      //     return generalModel.predict(this.state.urlInput);\n      //   })\n      // fetch(\"http://localhost:3000/imageurl\", {\n\n      fetch(\"https://quiet-meadow-82973.herokuapp.com/imageurl\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          // input: this.state.user.id,\n          input: this.state.urlInput\n        })\n      }).then(response => response.json()).then(response => {\n        // 把这一串拿走当作一个方法会比较符合面向对象的语言（我猜）\n        // var concepts =\n        //   response[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\n        //     \"bounding_box\"\n        //   ];\n        if (response) {\n          // fetch(\"http://localhost:3000/image\", {\n          fetch(\"https://quiet-meadow-82973.herokuapp.com/image\", {\n            method: \"post\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        } // console.log(response);\n\n\n        this.getConcepts(response); // console.log(\n        //   response[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\n        //     \"bounding_box\"\n        //   ]\n        // );\n        // console.log(this.calculateFaceLocation(response));\n        // console.log(this.state);\n\n        return this.calculateFaceLocation(response);\n      }).then(faceLocation => {\n        this.displayFaceFrame(faceLocation);\n      }).catch(err => {\n        console.log(\"There are some errors\", err);\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"logout\") {\n        this.setState(initialState);\n      } else if (route === \"home\") {\n        this.setState({\n          isSignin: true\n        });\n      }\n\n      this.setState({\n        route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    // 通过destructuring减少this.state的使用\n    const {\n      route,\n      imageUrl,\n      concepts,\n      isSignin,\n      faceFrame\n    } = this.state; // 设定一个函数对state.route进行判断\n\n    const knowRoute = route => {\n      if (route === \"home\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Rank, {\n            name: this.state.user.name,\n            entries: this.state.user.entries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n            onInputChange: this.onInputChange,\n            onButtonSubmit: this.onButtonSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n            imageUrl: imageUrl,\n            faceFrame: faceFrame,\n            concepts: concepts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this);\n      } else if (route === \"register\") {\n        return /*#__PURE__*/_jsxDEV(Register, {\n          loadUser: this.loadUser,\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Login, {\n          loadUser: this.loadUser,\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignin: isSignin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), knowRoute(route)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zzzzeng/Desktop/another frontend/face-recognition/face-recog/face-recognition/src/App.js"],"names":["React","Component","Login","Register","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","Particles","particlesOptions","particles","number","density","enable","value_area","initialState","urlInput","imageUrl","faceFrame","concepts","route","isSignin","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","eamil","onInputChange","event","console","log","target","value","calculateFaceLocation","clarifaiFace","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceFrame","getConcepts","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","input","then","response","json","count","Object","assign","faceLocation","catch","err","onRouteChange","render","knowRoute"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n// import Clarifai from \"clarifai\";\n// 在后端使用别人的api会更加安全，因为这样不暴露key\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Rank from \"./components/Rank/Rank\";\nimport Particles from \"react-particles-js\";\n\n// const app = new Clarifai.App({ apiKey: \"b245f7327c72491f83ffec3cdbfffb85\" });\nconst particlesOptions = {\n  particles: {\n    number: 30,\n    density: {\n      enable: true,\n      value_area: 800,\n    },\n  },\n};\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Particles className=\"particles\" params={particlesOptions} />\n//       <Navigation />\n//       <Logo />\n//       <Rank />\n//       <ImageLinkForm />\n//       {/* <FaceRecognition /> */}\n//     </div>\n//   );\n// }\n\n// 就我理解，需要使用到state这个属性必须要有constructor方法，即要通过class来声明\nconst initialState = {\n  urlInput: \"\",\n  imageUrl: \"\",\n  faceFrame: {},\n  concepts: {},\n  route: \"signin\",\n  isSignin: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\",\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    // 要使用this必须要先使用super\n    super();\n    // 设定state，可以让子组件和父组件进行数据互动，有点类似于闭包\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.eamil,\n        entries: data.entries,\n        joined: data.joined,\n      },\n    });\n  };\n\n  // componentDidMount() {\n  //   fetch(\"http://localhost:3000\")\n  //     .then((response) => response.json())\n  //     .then((data) => console.log(data));\n  // }\n\n  // 利用箭头函数解决this的指向问题\n  // 设置这个方法是为了改变state里面属性的值，子组件不能直接修改state的值，只能调用父组件的方法，从而达到修改state的目的\n  // 这里获得的event为调用这个方法的事件\n  onInputChange = (event) => {\n    console.log(event.target.value); //调用 事件对象.target.value可以获得输入input的值\n    // 调用这个继承自Component的方法来进行设定属性，不要通过 this.state.urlInput来设置值\n    // 传入参数为一个对象\n    this.setState({ urlInput: event.target.value });\n  };\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\"bounding_box\"];\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      // 因为想在inset里面使用百分比，所以在这里先乘以100，再进行返回\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceFrame = (faceFrame) => {\n    this.setState({ faceFrame: faceFrame });\n    // 可以简单写法\n    // this.setState({ faceFrame })\n  };\n\n  getConcepts = (data) => {\n    const concepts =\n      data[\"outputs\"][0][\"data\"][\"regions\"][0][\"data\"][\"concepts\"][0];\n    this.setState({ concepts: concepts });\n  };\n\n  onButtonSubmit = () => {\n    console.log(\"click\");\n    // 当点击按钮的时候和clarifai的api做交流\n    // 当点击按钮时改变State中imageUrl的值,这个值为输入的url的值\n    this.setState({ imageUrl: this.state.urlInput });\n    // app.models\n    //   .initModel({\n    //     id: Clarifai.FACE_DETECT_MODEL,\n    //     // version: \"53e1df302c079b3db8a0a36033ed2d15\",\n    //   })\n    //   .then((generalModel) => {\n    //     return generalModel.predict(this.state.urlInput);\n    //   })\n    // fetch(\"http://localhost:3000/imageurl\", {\n    fetch(\"https://quiet-meadow-82973.herokuapp.com/imageurl\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        // input: this.state.user.id,\n        input: this.state.urlInput,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        // 把这一串拿走当作一个方法会比较符合面向对象的语言（我猜）\n        // var concepts =\n        //   response[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\n        //     \"bounding_box\"\n        //   ];\n        if (response) {\n          // fetch(\"http://localhost:3000/image\", {\n          fetch(\"https://quiet-meadow-82973.herokuapp.com/image\", {\n            method: \"post\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((count) => {\n              this.setState(Object.assign(this.state.user, { entries: count }));\n            });\n        }\n        // console.log(response);\n        this.getConcepts(response);\n        // console.log(\n        //   response[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\n        //     \"bounding_box\"\n        //   ]\n        // );\n        // console.log(this.calculateFaceLocation(response));\n        // console.log(this.state);\n        return this.calculateFaceLocation(response);\n      })\n      .then((faceLocation) => {\n        this.displayFaceFrame(faceLocation);\n      })\n      .catch((err) => {\n        console.log(\"There are some errors\", err);\n      });\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"logout\") {\n      this.setState(initialState);\n    } else if (route === \"home\") {\n      this.setState({ isSignin: true });\n    }\n    this.setState({ route });\n  };\n\n  render() {\n    // 通过destructuring减少this.state的使用\n    const { route, imageUrl, concepts, isSignin, faceFrame } = this.state;\n    // 设定一个函数对state.route进行判断\n    const knowRoute = (route) => {\n      if (route === \"home\") {\n        return (\n          <div>\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            {/* 传入属性值，这样子组件可以获取数据，而且可以调用这里的方法 */}\n            {/* 第一个onInputChange为属性名，第二个为属性值，记得要加this，代表的是这个App类的方法 */}\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition\n              imageUrl={imageUrl}\n              faceFrame={faceFrame}\n              concepts={concepts}\n            />\n          </div>\n        );\n      } else if (route === \"register\") {\n        return (\n          <Register\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        );\n      } else {\n        return (\n          <Login loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        );\n      }\n    };\n\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation onRouteChange={this.onRouteChange} isSignin={isSignin} />\n        <Logo />\n        {knowRoute(route)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}