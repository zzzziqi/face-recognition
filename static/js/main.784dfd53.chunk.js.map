{"version":3,"sources":["components/Login/Login.js","components/Register/Register.js","components/Navigation/Navigation.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Rank/Rank.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","data","id","loadUser","onRouteChange","this","className","htmlFor","onChange","type","name","autoComplete","onClick","React","Component","Register","onNameChange","user","Navigation","isSignin","style","display","justifyContent","Logo","options","max","height","width","alt","src","brain","paddingTop","ImageLinkForm","onInputChange","onButtonSubmit","backgroundColor","border","FaceRecognition","imageUrl","faceFrame","concepts","toFixed","inset","topRow","rightCol","bottomRow","leftCol","Rank","entries","particlesOptions","particles","number","density","enable","value_area","initialState","urlInput","route","joined","App","eamil","console","log","calculateFaceLocation","clarifaiFace","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceFrame","getConcepts","input","count","Object","assign","faceLocation","catch","err","params","knowRoute","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.784dfd53.chunk.js","sourcesContent":["import React from \"react\";\n\n// 因为要加state所以改成class声明\n// const Login = ({ onRouteChange }) => {\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInEmail: \"\",\n      signInPassword: \"\",\n    };\n  }\n\n  onEmailChange = (event) => {\n    this.setState({ signInEmail: event.target.value });\n  };\n\n  onPasswordChange = (event) => {\n    this.setState({ signInPassword: event.target.value });\n  };\n\n  onSubmitSignIn = () => {\n    fetch(\"https://quiet-meadow-82973.herokuapp.com/signin\", {\n      // fetch(\"http://localhost:3000/signin\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: this.state.signInEmail,\n        password: this.state.signInPassword,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.id) {\n          this.props.loadUser(data);\n          this.props.onRouteChange(\"home\");\n        }\n      });\n  };\n\n  render() {\n    const { onRouteChange } = this.props;\n    return (\n      //   在jsx里面需要给input标签补/，让它闭合\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  onChange={this.onEmailChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  autoComplete=\"autoComplete\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  autoComplete=\"autoComplete\"\n                  onChange={this.onPasswordChange}\n                />\n              </div>\n            </fieldset>\n            <div>\n              <input\n                //   如果直接这样写就会直接调用这个函数\n                //   onClick={onRouteChange(\"home\")}\n                //   可以在{}内部通过箭头函数定义一个匿名函数达到不调用函数的效果\n                // onClick={() => onRouteChange(\"home\")}\n                onClick={this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Sign in\"\n                autoComplete=\"autoComplete\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p\n                onClick={() => onRouteChange(\"register\")}\n                className=\"f6 link dim black db pointer\"\n              >\n                Register\n              </p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\n\n// const Register = ({ onRouteChange }) => {\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      name: \"\",\n    };\n  }\n\n  onNameChange = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  onSubmitSignIn = () => {\n    fetch(\"https://quiet-meadow-82973.herokuapp.com/register\", {\n      // fetch(\"http://localhost:3000/register\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        name: this.state.name,\n      }),\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        if (user.id) {\n          this.props.loadUser(user);\n          this.props.onRouteChange(\"home\");\n        }\n      });\n  };\n\n  render() {\n    return (\n      //   在jsx里面需要给input标签补/，让它闭合\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  onChange={this.onNameChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  autoComplete=\"autoComplete\"\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  onChange={this.onEmailChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  autoComplete=\"autoComplete\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  onChange={this.onPasswordChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  autoComplete=\"autoComplete\"\n                />\n              </div>\n            </fieldset>\n            <div>\n              <input\n                onClick={this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n                autoComplete=\"autoComplete\"\n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\n\nconst Navigation = ({ onRouteChange, isSignin }) => {\n  // return isSignin ? (\n  //   <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n  //     <p\n  //       onClick={() => onRouteChange(\"signin\")}\n  //       className=\"f3 link dim black underline pa3 pointer\"\n  //     >\n  //       Log out\n  //     </p>\n  //   </nav>\n  // ) : (\n  //   <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n  //     <p\n  //       onClick={() => onRouteChange(\"signin\")}\n  //       className=\"f3 link dim black underline pa3 pointer\"\n  //     >\n  //       Sign In\n  //     </p>\n  //     <p\n  //       onClick={() => onRouteChange(\"register\")}\n  //       className=\"f3 link dim black underline pa3 pointer\"\n  //     >\n  //       Register\n  //     </p>\n  //   </nav>\n  // );\n  if (isSignin) {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"logout\")}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          Log out\n        </p>\n      </nav>\n    );\n  } else {\n    return (\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <p\n          onClick={() => onRouteChange(\"signin\")}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          Sign In\n        </p>\n        <p\n          onClick={() => onRouteChange(\"register\")}\n          className=\"f3 link dim black underline pa3 pointer\"\n        >\n          Register\n        </p>\n      </nav>\n    );\n  }\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/brain.04dd9926.png\";","import React from \"react\";\nimport Tilt from \"react-tilt\";\nimport \"./Logo.css\";\nimport brain from \"./brain.png\";\n\nconst Logo = () => {\n  return (\n    <div className=\"ma4 mt0 logo\">\n      <Tilt\n        className=\"Tilt br2 shadow-2\"\n        options={{ max: 25 }}\n        style={{ height: 100, width: 100 }}\n      >\n        <div className=\"Tilt-inner pa3\">\n          <img alt=\"brain\" src={brain} style={{ paddingTop: \"5px\" }} />{\" \"}\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport \"./ImageLinkForm.css\";\n\n// props获取父组件对应的子组件的属性\n// props = { onInputChange: ()=>{}, onButtonSubmit: ()=>{} }\n// const ImageLinkForm = (props) => {\n// 通过destructuring来直接获取props对象里面的方法\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n  return (\n    <div>\n      <p>\n        {`This Magic Brain will detect faces in your pictures, Give it a link`}\n      </p>\n      <div className=\"center\">\n        <div className=\"pa4 br3 shadow-5 center form\">\n          <input\n            className=\"f4 pa2 w-70 center\"\n            type=\"text\"\n            // onChange={console.log(props)}\n            // 设置行内sctipt，当input改变时，触发函数\n            onChange={onInputChange}\n          />\n          <button\n            className=\"w-30 grow f4 link ph3 pv2 dib white\"\n            style={{ backgroundColor: \"#f99f81\", border: \"1px solid orange\" }}\n            onClick={onButtonSubmit}\n          >\n            Detect\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageLinkForm;\n","import React from \"react\";\nimport \"./FaceRecognition.css\";\n\nconst FaceRecognition = ({ imageUrl, faceFrame, concepts }) => {\n  const value = concepts.value && concepts.value.toFixed(2);\n  return (\n    <div className=\"center ma\">\n      <div className=\"absolute mt2\">\n        <img\n          id=\"inputimage\"\n          alt=\"\"\n          src={imageUrl}\n          width=\"580px\"\n          height=\"auto\"\n        />\n        <div\n          className=\"faceBox\"\n          style={{\n            inset: `${faceFrame.topRow}px ${faceFrame.rightCol}px ${faceFrame.bottomRow}px ${faceFrame.leftCol}px`,\n          }}\n        >\n          <div className=\"concepts\">\n            <span>{concepts.name}</span>\n            <span>{value}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","import React from \"react\";\n\nconst Rank = ({ name, entries }) => {\n  return (\n    <div>\n      <div className=\"white f4\">\n        <p>{`${name}, Your current entry count is...`}</p>\n      </div>\n      <div className=\"white f3\">{entries}</div>\n    </div>\n  );\n};\n\nexport default Rank;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n// import Clarifai from \"clarifai\";\n// 在后端使用别人的api会更加安全，因为这样不暴露key\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Rank from \"./components/Rank/Rank\";\nimport Particles from \"react-particles-js\";\n\n// const app = new Clarifai.App({ apiKey: \"b245f7327c72491f83ffec3cdbfffb85\" });\nconst particlesOptions = {\n  particles: {\n    number: 30,\n    density: {\n      enable: true,\n      value_area: 800,\n    },\n  },\n};\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Particles className=\"particles\" params={particlesOptions} />\n//       <Navigation />\n//       <Logo />\n//       <Rank />\n//       <ImageLinkForm />\n//       {/* <FaceRecognition /> */}\n//     </div>\n//   );\n// }\n\n// 就我理解，需要使用到state这个属性必须要有constructor方法，即要通过class来声明\nconst initialState = {\n  urlInput: \"\",\n  imageUrl: \"\",\n  faceFrame: {},\n  concepts: {},\n  route: \"signin\",\n  isSignin: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\",\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    // 要使用this必须要先使用super\n    super();\n    // 设定state，可以让子组件和父组件进行数据互动，有点类似于闭包\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.eamil,\n        entries: data.entries,\n        joined: data.joined,\n      },\n    });\n  };\n\n  // componentDidMount() {\n  //   fetch(\"http://localhost:3000\")\n  //     .then((response) => response.json())\n  //     .then((data) => console.log(data));\n  // }\n\n  // 利用箭头函数解决this的指向问题\n  // 设置这个方法是为了改变state里面属性的值，子组件不能直接修改state的值，只能调用父组件的方法，从而达到修改state的目的\n  // 这里获得的event为调用这个方法的事件\n  onInputChange = (event) => {\n    console.log(event.target.value); //调用 事件对象.target.value可以获得输入input的值\n    // 调用这个继承自Component的方法来进行设定属性，不要通过 this.state.urlInput来设置值\n    // 传入参数为一个对象\n    this.setState({ urlInput: event.target.value });\n  };\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\"bounding_box\"];\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      // 因为想在inset里面使用百分比，所以在这里先乘以100，再进行返回\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceFrame = (faceFrame) => {\n    this.setState({ faceFrame: faceFrame });\n    // 可以简单写法\n    // this.setState({ faceFrame })\n  };\n\n  getConcepts = (data) => {\n    const concepts =\n      data[\"outputs\"][0][\"data\"][\"regions\"][0][\"data\"][\"concepts\"][0];\n    this.setState({ concepts: concepts });\n  };\n\n  onButtonSubmit = () => {\n    console.log(\"click\");\n    // 当点击按钮的时候和clarifai的api做交流\n    // 当点击按钮时改变State中imageUrl的值,这个值为输入的url的值\n    this.setState({ imageUrl: this.state.urlInput });\n    // app.models\n    //   .initModel({\n    //     id: Clarifai.FACE_DETECT_MODEL,\n    //     // version: \"53e1df302c079b3db8a0a36033ed2d15\",\n    //   })\n    //   .then((generalModel) => {\n    //     return generalModel.predict(this.state.urlInput);\n    //   })\n    // fetch(\"http://localhost:3000/imageurl\", {\n    fetch(\"https://quiet-meadow-82973.herokuapp.com/imageurl\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        // input: this.state.user.id,\n        input: this.state.urlInput,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        // 把这一串拿走当作一个方法会比较符合面向对象的语言（我猜）\n        // var concepts =\n        //   response[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\n        //     \"bounding_box\"\n        //   ];\n        if (response) {\n          // fetch(\"http://localhost:3000/image\", {\n          fetch(\"https://quiet-meadow-82973.herokuapp.com/image\", {\n            method: \"post\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            }),\n          })\n            .then((response) => response.json())\n            .then((count) => {\n              this.setState(Object.assign(this.state.user, { entries: count }));\n            });\n        }\n        // console.log(response);\n        this.getConcepts(response);\n        // console.log(\n        //   response[\"outputs\"][0][\"data\"][\"regions\"][0][\"region_info\"][\n        //     \"bounding_box\"\n        //   ]\n        // );\n        // console.log(this.calculateFaceLocation(response));\n        // console.log(this.state);\n        return this.calculateFaceLocation(response);\n      })\n      .then((faceLocation) => {\n        this.displayFaceFrame(faceLocation);\n      })\n      .catch((err) => {\n        console.log(\"There are some errors\", err);\n      });\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"logout\") {\n      this.setState(initialState);\n    } else if (route === \"home\") {\n      this.setState({ isSignin: true });\n    }\n    this.setState({ route });\n  };\n\n  render() {\n    // 通过destructuring减少this.state的使用\n    const { route, imageUrl, concepts, isSignin, faceFrame } = this.state;\n    // 设定一个函数对state.route进行判断\n    const knowRoute = (route) => {\n      if (route === \"home\") {\n        return (\n          <div>\n            <Rank\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            {/* 传入属性值，这样子组件可以获取数据，而且可以调用这里的方法 */}\n            {/* 第一个onInputChange为属性名，第二个为属性值，记得要加this，代表的是这个App类的方法 */}\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition\n              imageUrl={imageUrl}\n              faceFrame={faceFrame}\n              concepts={concepts}\n            />\n          </div>\n        );\n      } else if (route === \"register\") {\n        return (\n          <Register\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        );\n      } else {\n        return (\n          <Login loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        );\n      }\n    };\n\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation onRouteChange={this.onRouteChange} isSignin={isSignin} />\n        <Logo />\n        {knowRoute(route)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}